--!luau
-- Script join server VIP v·ªõi error handling v√† retry mechanism
local Players: Players = game:GetService("Players")
local TeleportService: TeleportService = game:GetService("TeleportService")
local HttpService: HttpService = game:GetService("HttpService")

-- Config v·ªõi type checking
type ServerHopConfig = {
    TargetPlaceId: number,
    ServerCode: string,
    MaxRetries: number,
    RetryDelay: number
}

local config: ServerHopConfig = {
    TargetPlaceId = 109983668079237, -- Place ID t·ª´ link VIP
    ServerCode = "410f15c668ff3d4096bb816294c7385d",
    MaxRetries = 5,
    RetryDelay = 3
}

-- Function ƒë·ªÉ decode server code v√† l·∫•y jobId
local function getServerJobId(): string?
    local success, result = pcall(function()
        -- Ph√¢n t√≠ch server code t·ª´ link
        local decoded = config.ServerCode
        if decoded and typeof(decoded) == "string" then
            print("üîó Server code:", decoded)
            return decoded
        end
        return nil
    end)
    
    if success then
        return result
    else
        warn("‚ùå Failed to decode server code:", result)
        return nil
    end
end

-- Improved join function v·ªõi teleport options
local function joinVIPServer(player: Player): boolean
    if not player then
        warn("‚ùå Player is nil")
        return false
    end
    
    local jobId: string? = getServerJobId()
    if not jobId then
        warn("‚ùå Could not get valid job ID")
        return false
    end
    
    print("üöÄ Attempting to join VIP server...")
    print("üìç Place ID:", config.TargetPlaceId)
    print("üéØ Server Code:", jobId)
    
    for attempt = 1, config.MaxRetries do
        print(`üîÑ Attempt {attempt}/{config.MaxRetries}...`)
        
        local success, result = pcall(function()
            -- T·∫°o teleport options v·ªõi server code
            local teleportOptions = Instance.new("TeleportOptions")
            teleportOptions.ServerInstanceId = jobId
            
            -- Th·ª±c hi·ªán teleport
            TeleportService:TeleportAsync(config.TargetPlaceId, {player}, teleportOptions)
        end)
        
        if success then
            print("‚úÖ Successfully initiated teleport to VIP server!")
            return true
        else
            warn(`‚ùå Teleport attempt {attempt} failed:`, result)
            
            -- N·∫øu kh√¥ng ph·∫£i l·∫ßn th·ª≠ cu·ªëi, ch·ªù r·ªìi th·ª≠ l·∫°i
            if attempt < config.MaxRetries then
                print(`‚è≥ Waiting {config.RetryDelay} seconds before retry...`)
                task.wait(config.RetryDelay)
            end
        end
    end
    
    warn("‚ùå All teleport attempts failed")
    return false
end

-- Function hi·ªÉn th·ªã th√¥ng b√°o
local function showNotification(message: string, duration: number?)
    local notificationService = game:GetService("NotificationService")
    local success, result = pcall(function()
        notificationService:ShowNotification(
            "VIP Server Joiner",
            message,
            "rbxassetid://6026568195", -- Icon th√¥ng b√°o
            duration or 5
        )
    end)
    
    if not success then
        -- Fallback: in ra console
        print("üì¢ " .. message)
    end
end

-- Main execution v·ªõi safety checks
local function main()
    local player: Player? = Players.LocalPlayer
    if not player then
        warn("‚ùå LocalPlayer not found")
        return false
    end
    
    -- Ch·ªù character load n·∫øu c·∫ßn
    if not player.Character then
        print("‚è≥ Waiting for character to load...")
        player.CharacterAdded:Wait()
        task.wait(2) -- Th√™m delay ƒë·ªÉ ƒë·∫£m b·∫£o character ready
    end
    
    showNotification("ƒêang k·∫øt n·ªëi ƒë·∫øn server VIP...", 3)
    
    local joinSuccess = joinVIPServer(player)
    
    if joinSuccess then
        showNotification("‚úÖ ƒêang v√†o server VIP...", 5)
    else
        showNotification("‚ùå Kh√¥ng th·ªÉ v√†o server VIP. Vui l√≤ng th·ª≠ l·∫°i!", 5)
        
        -- Alternative method: Th·ª≠ join qua link tr·ª±c ti·∫øp
        local alternativeSuccess = pcall(function()
            TeleportService:Teleport(config.TargetPlaceId, player)
        end)
        
        if alternativeSuccess then
            showNotification("üîÑ ƒêang th·ª≠ ph∆∞∆°ng ph√°p thay th·∫ø...", 3)
        end
    end
    
    return joinSuccess
end

-- Execute script v·ªõi error handling
local success, result = pcall(main)

if not success then
    warn("‚ùå Script execution failed:", result)
    showNotification("L·ªói khi th·ª±c thi script join server", 5)
end

return success
